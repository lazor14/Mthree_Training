
üñ•Ô∏è Shell and Shell Scripting Basics
What is a Shell?
A shell is a command-line interpreter that allows users to interact with the operating system.
It takes user commands and executes them.
Examples of popular shells: 
Bash (Bourne Again Shell) ‚Äì Most commonly used in Linux.
Zsh (Z Shell) ‚Äì A more advanced version of Bash.
Fish (Friendly Interactive Shell) ‚Äì Focuses on ease of use.

What is Shell Scripting?
Shell scripting is writing a sequence of shell commands in a file and executing them as a script.
It automates repetitive tasks like backups, monitoring, and software installation.
‚úÖ Advantages of Shell Scripting:
Automation ‚Äì Reduces manual work.
Batch Processing ‚Äì Execute multiple commands in a sequence.
System Administration ‚Äì Manage processes, files, and users.
Custom Tools ‚Äì Create utilities to perform specific tasks.

üñ•Ô∏è Basics of Shell Scripting
Writing a Shell Script
Create a file: 
vi myscript.sh
Add the shebang (#!) to specify the interpreter: 
#!/bin/bash
echo "Hello, Shell Scripting!"
Make it executable: 
chmod +x myscript.sh
Run the script: 
./myscript.sh

Variables in Shell Scripting
Defining Variables: 
name="Pratik"
age=25
Accessing Variables: 
echo "Name: $name, Age: $age"
Reading User Input: 
read -p "Enter your city: " city
echo "You live in $city."

Conditional Statements (If-Else)
‚úÖ Syntax:
if [ condition ]; then
   # Code if condition is true
elif [ another_condition ]; then
   # Code if another_condition is true
else
   # Code if none of the conditions are true
fi
‚úÖ Example: Check if a number is positive, negative, or zero
#!/bin/bash

read -p "Enter a number: " num

if [ "$num" -gt 0 ]; then
    echo "Positive"
elif [ "$num" -lt 0 ]; then
    echo "Negative"
else
    echo "Zero"
fi

Loops in Shell Scripting
‚úÖ For Loop:
for i in {1..5}; do
    echo "Number: $i"
done
‚úÖ While Loop:
i=1
while [ "$i" -le 5 ]; do
    echo "Count: $i"
    ((i++))
done
‚úÖ Until Loop (Runs until the condition becomes true):
i=1
until [ "$i" -gt 5 ]; do
    echo "Until Count: $i"
    ((i++))
done

üì¶ tar Command (Archiving & Compression)
What is tar?
tar (Tape Archive) is used to combine multiple files into a single archive file.
It does not compress by default but can be combined with gzip or bzip2 for compression.

Creating a Tar Archive (.tar)
tar -cvf archive.tar file1 file2 folder/
-c ‚Üí Create a new archive.
-v ‚Üí Show progress (verbose).
-f ‚Üí Specify the archive filename.
Example Output: 
file1
file2
folder/

Extracting a Tar Archive
tar -xvf archive.tar
-x ‚Üí Extract files from the archive.
-v ‚Üí Show progress.
-f ‚Üí Specify the archive file.
‚úÖ Extract to a specific folder:
tar -xvf archive.tar -C /path/to/destination/

4Ô∏è‚É£ Creating a Compressed Archive (.tar.gz or .tgz)
tar -czvf archive.tar.gz file1 file2 folder/
-z ‚Üí Compress using gzip.
Example Output: A compressed archive.tar.gz file.
‚úÖ Extracting .tar.gz files:
tar -xzvf archive.tar.gz

Creating a Highly Compressed Archive (.tar.bz2)
tar -cjvf archive.tar.bz2 file1 file2 folder/
-j ‚Üí Compress using bzip2 (better compression but slower).
‚úÖ Extracting .tar.bz2 files:
tar -xjvf archive.tar.bz2

Viewing Contents of a Tar Archive
tar -tvf archive.tar
-t ‚Üí List the files inside the archive without extracting.

Adding Files to an Existing Tar Archive
tar -rvf archive.tar newfile.txt
üö® Note: This does not work for compressed archives (.tar.gz).

Deleting a File from a Tar Archive
tar --delete -f archive.tar file1.txt
üö® Note: You cannot delete from compressed archives (.tar.gz).

9Ô∏è‚É£ Extracting a Single File from a Tar Archive
tar -xvf archive.tar file1.txt
‚úÖ Extract Multiple Files:
tar -xvf archive.tar file1.txt file2.txt

üîç Summary of tar Options
Action
Command
Create .tar
tar -cvf archive.tar files
Create .tar.gz
tar -czvf archive.tar.gz files
Create .tar.bz2
tar -cjvf archive.tar.bz2 files
Extract .tar
tar -xvf archive.tar
Extract .tar.gz
tar -xzvf archive.tar.gz
List contents
tar -tvf archive.tar
Add to archive
tar -rvf archive.tar newfile.txt
Delete from archive
tar --delete -f archive.tar file1.txt

